{
    "project": {
        "description": "Ubuntu HTML5 API: JavaScript for HTML5 Ubuntu Apps",
        "majorversion": "HTML-14.04-dev",
        "name": "Ubuntu HTML5 API",
        "version": "HTML-14.04-dev~bzr202"
    },
    "files": {
        "buttons.js": {
            "name": "buttons.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Button": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "core.js": {
            "name": "core.js",
            "modules": {
                "UbuntuUI": 1
            },
            "classes": {
                "UbuntuUI": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dialogs.js": {
            "name": "dialogs.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Dialog": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "fast-buttons.js": {
            "name": "fast-buttons.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "header.js": {
            "name": "header.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Header": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "list.js": {
            "name": "list.js",
            "modules": {},
            "classes": {
                "UbuntuUI.List": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "option-selector.js": {
            "name": "option-selector.js",
            "modules": {},
            "classes": {
                "UbuntuUI.OptionSelector": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "page.js": {
            "name": "page.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Page": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "pagestacks.js": {
            "name": "pagestacks.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Pagestack": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "popovers.js": {
            "name": "popovers.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Popover": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "progress.js": {
            "name": "progress.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Progress": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "shape.js": {
            "name": "shape.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Shape": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "tab.js": {
            "name": "tab.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Tab": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "tabs.js": {
            "name": "tabs.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Tabs": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        },
        "toolbars.js": {
            "name": "toolbars.js",
            "modules": {},
            "classes": {
                "UbuntuUI.Toolbar": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            }
        }
    },
    "modules": {
        "UbuntuUI": {
            "name": "UbuntuUI",
            "submodules": {},
            "classes": {
                "UbuntuUI.Button": 1,
                "UbuntuUI": 1,
                "UbuntuUI.Dialog": 1,
                "UbuntuUI.Header": 1,
                "UbuntuUI.List": 1,
                "UbuntuUI.OptionSelector": 1,
                "UbuntuUI.Page": 1,
                "UbuntuUI.Pagestack": 1,
                "UbuntuUI.Popover": 1,
                "UbuntuUI.Progress": 1,
                "UbuntuUI.Shape": 1,
                "UbuntuUI.Tab": 1,
                "UbuntuUI.Tabs": 1,
                "UbuntuUI.Toolbar": 1
            },
            "fors": {},
            "namespaces": {
                "UbuntuUI": 1
            },
            "tag": "module",
            "file": "toolbars.js",
            "line": 23
        }
    },
    "classes": {
        "UbuntuUI.Button": {
            "name": "UbuntuUI.Button",
            "shortname": "UbuntuUI.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "buttons.js",
            "line": 23,
            "description": "A Button.\n\nNote the Ubuntu CSS style classes: <em>positive</em>, <em>information</em>, <em>secondary</em>, and <em>negative</em>",
            "is_constructor": 1,
            "example": [
                "\n     <button data-role=\"button\" id=\"buttonID\">text</button>\n\n     Javascript access:\n     var button = UI.button(\"buttonID\");"
            ]
        },
        "UbuntuUI": {
            "name": "UbuntuUI",
            "shortname": "UbuntuUI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "",
            "file": "core.js",
            "line": 27,
            "description": "UbuntuUI is the critical Ubuntu HTML5 framework class. You need to construct an UbuntuUI object and initialize it to have an Ubuntu HTML5 app. You then use this object to access Ubuntu HTML5 objects (and object methods) that correspond to the Ubuntu HTML5 DOM elements.\n\nNote: The UbuntuUI object is \"UI\" in all API doc examples.",
            "is_constructor": 1,
            "example": [
                "\n     var UI = new UbuntuUI();\n     window.onload = function () {\n       UI.init();\n       UI.pagestack.push('pageid');\n       [...]\n     };"
            ]
        },
        "UbuntuUI.Dialog": {
            "name": "UbuntuUI.Dialog",
            "shortname": "UbuntuUI.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "dialogs.js",
            "line": 23,
            "description": "Dialogs are modal full-screen popups that prevent other GUI interactions with the application until dismissed.\n\nDialogs wrap arbitrary markup.\n\nDialogs are declared at the top level inside the <em>content</em> div.",
            "is_constructor": 1,
            "example": [
                "\n     <div data-role=\"content\">\n       <div data-role=\"pagestack\">\n         [...]\n       </div>\n       <div data-role=\"dialog\" id=\"dialogID\">\n         [...]\n       </div>\n     </div>\n\n     JavaScript access:\n     var dialog = UI.dialog(\"dialogID\");\n"
            ]
        },
        "UbuntuUI.Header": {
            "name": "UbuntuUI.Header",
            "shortname": "UbuntuUI.Header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "header.js",
            "line": 23,
            "description": "An Ubuntu Header wraps the general Tabs definitions and interaction in the case of a Tab\n  navigation pattern or is used to display the title of the current page when using a PageStack navigation pattern.\n\nIn the case of a Tab navigation pattern, declare the Header and its Tabs in HTML as a direct child\nof the top level MainView as a sibling to the <em>content</em> div.\n\nIn the case of a PageStack navigation pattern, the Ubuntu Header HTML element should be present\nand can be left empty. It will be automatically updated to hold the Title of the current Page being\nvisited. The value of such a title is taken from the data-title attribute of the currently visited\nPage as it is being pushed at the top of the stack (see PageStack.push()).\n\n######Contained list provides Page navigation\nA contained unordered list has list items, each of which has \"data-page\" data attribute whose value of a Page ID that it targets. Clicking the Header/Tabs allows the user to navigate to the Pages identified by these IDs.",
            "is_constructor": 1,
            "example": [
                "\n     <body>\n       <div data-role=\"mainview\">\n\n         <header data-role=\"header\" id=\"headerID\">\n           <ul data-role=\"tabs\">\n             <li data-role=\"tabitem\" data-page=\"main\">Main</li>\n             <li data-role=\"tabitem\" data-page=\"two\">Two</li>\n           </ul>\n         </header>\n\n         <div data-role=\"content\">\n           <div data-role=\"tab\" id=\"main\">\n               [...]\n           </div>\n           <div data-role=\"tab\" id=\"two\">\n               [...]\n           </div>\n         </div>\n\n       </div>\n     </body>\n\n     JavaScript access:\n     var header = UI.header(\"headerID\");"
            ]
        },
        "UbuntuUI.List": {
            "name": "UbuntuUI.List",
            "shortname": "UbuntuUI.List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "list.js",
            "line": 23,
            "description": "A List comes with various options, including: a <em>header</em>, main text (pushed left), an icon (pushed left), and a secondary label (pushed right).",
            "is_constructor": 1,
            "example": [
                "\n    <section data-role=\"list\" id=\"testlist\">\n      <header>My header text</header>\n      <ul>\n        <li>\n          <a href=\"#\">Main text, to the left</a>\n        </li>\n        <li>\n          <a href=\"#\">Main text</a>\n          <label>Right text</label>\n        </li>\n        <li>\n          <aside>\n            <img src=\"someicon.png\">\n          </aside>\n          <a href=\"#\">Main text</a>\n          <label>Right</label>\n        </li>\n      </ul>\n     </section>\n\n     JavaScript access:\n       var list = UI.list('[id=\"testlist\"]');"
            ]
        },
        "UbuntuUI.OptionSelector": {
            "name": "UbuntuUI.OptionSelector",
            "shortname": "UbuntuUI.OptionSelector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "option-selector.js",
            "line": 23,
            "description": "OptionSelector is a component displaying either a single selected value or expanded multiple choice with an optional image and subtext when not expanded, when expanding it opens a\n   listing of all the possible values for selection with an additional option of always being expanded. If multiple choice is selected the list is expanded automatically.",
            "is_constructor": 1,
            "example": [
                "\n     <section data-role=\"option-selector\" id=\"OptionSelectorID\">\n       <ul>\n         <li data-value=\"0\">\n           <p>Label 1</p>\n         </li>\n         <li data-value=\"1\">\n           <p>Label 2</p>\n         </li>\n         <li data-value=\"3\">\n           <p>Label 3</p>\n         </li>\n       </ul>\n     </section>\n\n     JavaScript access:\n\n     Expanded:\n       UI.optionselector(\"OptionSelectorID\", true);\n     Expanded and multi selection:\n       UI.optionselector(\"OptionSelectorID\", true, true);\n     Multi selection:\n       UI.optionselector(\"OptionSelectorID\", false, true);"
            ]
        },
        "UbuntuUI.Page": {
            "name": "UbuntuUI.Page",
            "shortname": "UbuntuUI.Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "page.js",
            "line": 23,
            "description": "One of the navigation pattern that can be used within an Ubuntu App is the deep navigation. This\npattern is implemented by the Pagestack. A Pagestack contains one or more Pages. Each page displays full-screen. See the Pagestack class.\n\nEach Page must have <em>id</em> and <em>data-title</em> attributes. The <em>id</em> attribute is used a unique reference to push the Page to the top of the Pagestack (see the Pagestack class). The <em>data-title</em> attribute is used to update the Header title as pages are pushed and poped.",
            "is_constructor": 1,
            "example": [
                "\n     </body>\n       <div data-role=\"mainview\">\n\n         <header data-role=\"header\">\n         </header>\n\n         <div data-role=\"content\">\n           <div data-role=\"pagestack\">\n             <div data-role=\"page\" data-title=\"Main\" id=\"main\">\n               [...]\n             </div>\n             <div data-role=\"page\" data-title=\"My Data\" id=\"data\">\n               [...]\n             </div>\n           </div>\n         </div>\n\n       </div>\n     </body>\n\n     JavaScript access:\n     var page = UI.page(\"pageID\");"
            ]
        },
        "UbuntuUI.Pagestack": {
            "name": "UbuntuUI.Pagestack",
            "shortname": "UbuntuUI.Pagestack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "pagestacks.js",
            "line": 23,
            "description": "The Pagestack manages all Pages in a stack data structure. Initially, the Pagestack contains no Pages. The <em>push()</em> method is normally executed on load to display the app starting page.\n\n     UI.pagestack.push(\"pageID\")\n\nThe topmost Page on the Pagestack is always displayed.\n\nThe Pagestack is declared as a direct child of the <em>content</em> div.\n\n#####Default application wide footer\nThe Pagestack contains a default <em>footer</em> (represented in JavaScript as a Toolbar), even if you do not declare one in HTML. The <em>footer</em> has a single Back button.\n#####Customized application wide footer\nThis application-wide <em>footer</em> can be customized (for example, you can add Buttons) by declaring a <em>footer</em> as a direct child of the <em>pagestack</em> div (see example).\n######Page specific footers\nA <em>page</em> may declare a page-specific <em>footer</em> as a child element.",
            "is_constructor": 1,
            "example": [
                "\n\n    <div data-role=\"mainview\">\n\n       <header data-role=\"header\">\n       </header>\n\n       <div data-role=\"content\">\n\n         <div data-role=\"pagestack\">\n\n           <div data-role=\"page\" id=\"main\" data-title=\"Page 1\">\n           </div>\n\n           <div data-role=\"page\" id=\"page2\" data-title=\"Page 2\">\n             [...]\n             <footer data-role=\"footer\" class=\"revealed\" id=\"footerPage2\">\n               [...]\n             </footer>\n           </div>\n\n           <footer data-role=\"footer\" class=\"revealed\" id=\"footerAppWide\">\n             [...]\n           </footer>\n\n         </div>  <!-- end of Pagestack div -->\n\n       </div>\n\n     </div>\n\n     JavaScript access:\n     UI.pagestack.METHOD();\n"
            ]
        },
        "UbuntuUI.Popover": {
            "name": "UbuntuUI.Popover",
            "shortname": "UbuntuUI.Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "popovers.js",
            "line": 23,
            "description": "A Popover is a div containng markup that can pop up and disappear. (Unlike a Dialog, Popovers are not full screen.)\n\nA Popoves often contain a List whose items are connected to useful JavaScript functions.\n\n\n######Popover Position\nThe Popover's position is set relative to a specified base element with the <em>data-gravity=\"LETTER\"</em> attribute. LETTER values:\n\n- 'n': the base element is above the Popover\n- 's': the base element is below the Popover\n- 'e': the base element is to the east of (to the right of) the Popover (in right-to-left locales)\n- 'w': the base element is to the west of (to the left of) the Popover (in right-to-left locale)",
            "is_constructor": 1,
            "params": [
                {
                    "name": "elem",
                    "description": "- The element to which the Popover's position is relative",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "- The id attribute of the Popover in HTML",
                    "type": "ID"
                }
            ],
            "example": [
                "\n\n     <p id=\"popoverBase\">Text</p>\n     <div class=\"popover active\" data-gravity=\"n\" id=\"popover\">\n       <ul class=\"list\">\n         <li class=\"active\"><a href=\"#\">Item1</a></li>\n         <li><a href=\"#\">Item2</a></li>\n       </ul>\n     </div>\n\n     Javascript:\n     var popBase = document.getElementById(\"popoverBase\");\n     var popover = UI.popover(popBase, \"popover\");"
            ]
        },
        "UbuntuUI.Progress": {
            "name": "UbuntuUI.Progress",
            "shortname": "UbuntuUI.Progress",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "progress.js",
            "line": 23,
            "description": "A Progress.\n\nNote the Ubuntu CSS style classes: <em>infinite</em>",
            "is_constructor": 1,
            "example": [
                "\n     <progress value=\"80\" max=\"100\"></progress>\n\n     Javascript access:\n     var pre = UI.progress(\"progressID\");"
            ]
        },
        "UbuntuUI.Shape": {
            "name": "UbuntuUI.Shape",
            "shortname": "UbuntuUI.Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "shape.js",
            "line": 23,
            "description": "An Ubuntu Shape contains and decorates (with CSS styles) some markup, often an <em>img</em>.",
            "is_constructor": 1,
            "example": [
                "\n     <div data-role=\"shape\" id=\"shapeID\">\n       <img src=\"URI\"/>\n     </div>\n\n     JavaScript access:\n     var shape = UI.shape(\"shapeID\");\n"
            ]
        },
        "UbuntuUI.Tab": {
            "name": "UbuntuUI.Tab",
            "shortname": "UbuntuUI.Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "tab.js",
            "line": 22,
            "description": "One of the navigation pattern that can be used within an Ubuntu App is the flat navigation. Tabs are the standard way to provide such a navigation pattern from within your application.\n\nA Tab represents the UI element that hosts your tab content. This UI element is being activated by the user selecting it as part of the Header element.",
            "is_constructor": 1,
            "example": [
                "\n     </body>\n\n       <div data-role=\"mainview\">\n         <header data-role=\"header\" id=\"headerID\">\n           <ul data-role=\"tabs\">\n             <li data-role=\"tabitem\" data-page=\"tabID\">\n               Main\n             </li>\n             <li data-role=\"tabitem\" data-page=\"page2\">\n               Two\n             </li>\n           </ul>\n         </header>\n\n         <div data-role=\"content\">\n             <div data-role=\"tab\" id=\"tabID\">\n               [...]\n             </div>\n             <div data-role=\"tab\" id=\"page2\">\n               [...]\n             </div>\n         </div>\n\n       </div>\n     </body>\n\n     JavaScript access:\n     var tab = UI.tab(\"tabID\");"
            ]
        },
        "UbuntuUI.Tabs": {
            "name": "UbuntuUI.Tabs",
            "shortname": "UbuntuUI.Tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "tabs.js",
            "line": 23,
            "description": "One of the navigation pattern that can be used within an Ubuntu App is the flat navigation. Tabs are the standard way to provide such a navigation pattern from within your application.\n\nTabs are defined from within the Header part of your application HTML. See the Header class for more information.\n\nDeclare the Header and Tabs in HTML as a direct child of the top level Page as a sibling to the content div.",
            "is_constructor": 1,
            "example": [
                "\n     <body>\n       <div data-role=\"mainview\">\n\n         <header data-role=\"header\">\n           <ul data-role=\"tabs\">\n             <li data-role=\"tabitem\" data-page=\"main\">\n               Main\n             </li>\n             <li data-role=\"tabitem\" data-page=\"page2\">\n               Two\n             </li>\n           </ul>\n         </header>\n\n         <div data-role=\"content\">\n           <div data-role=\"tab\" id=\"main\">\n             [...]\n           </div>\n\n           <div data-role=\"tab\" id=\"page2\">\n             [...]\n           </div>\n         </div>\n\n       </div>\n     </body>\n\n     JavaScript access:\n     UI.tabs.METHOD();"
            ]
        },
        "UbuntuUI.Toolbar": {
            "name": "UbuntuUI.Toolbar",
            "shortname": "UbuntuUI.Toolbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "file": "toolbars.js",
            "line": 23,
            "description": "A Toolbar is the JavaScript representation of an Ubuntu HTML5 app <em>footer</em>.\n\n######Contained List provides buttons\nThe Toolbar contains a List, where each list item is treated as a Button (see below). List items (Buttons) are pushed to the right. The default Back button always exists to the left and does not need to be declared.\n\n#####Default and custom footers\nSee the Pagestack class documentation for information about the default application-wide Footer, customizing it, and adding Page-specific Footers.",
            "is_constructor": 1,
            "example": [
                "\n     <footer data-role=\"footer\" class=\"revealed\" id=\"footerID\">\n       <nav>\n         <ul>\n           <li>\n             <a href=\"#\" id=\"home\">Home</a>\n           </li>\n         </ul>\n       </nav>\n     </footer>\n\n     JavaScript access:\n     var toolbar = UI.toolbar(\"toolbarID\");\n     UI.button('home').click(function () {\n       UI.pagestack.push(\"main\");\n     });\n"
            ]
        }
    },
    "classitems": [
        {
            "file": "buttons.js",
            "line": 42,
            "description": "Associate a function with the button's Click event",
            "itemtype": "method",
            "name": "click",
            "params": [
                {
                    "name": "callback",
                    "description": "- The function to execute on click",
                    "type": "Function"
                }
            ],
            "example": [
                "\n       UI.button(\"buttonid\").click(function(){\n        console.log(\"clicked\");\n       });"
            ],
            "class": "UbuntuUI.Button",
            "namespace": "UbuntuUI"
        },
        {
            "file": "buttons.js",
            "line": 57,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "example": [
                "\n       var mybutton = UI.button(\"buttonid\").element();"
            ],
            "class": "UbuntuUI.Button",
            "namespace": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 424,
            "description": "Required call that initializes the UbuntuUI object",
            "itemtype": "method",
            "name": "init",
            "type": "",
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 434,
            "description": "Gets an Ubuntu Page object",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Page with the specified id",
                "type": "Page"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 448,
            "description": "Gets an Ubuntu Tab object",
            "itemtype": "method",
            "name": "tab",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Tab with the specified id",
                "type": "Tab"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 462,
            "description": "Gets an Ubuntu Shape object",
            "itemtype": "method",
            "name": "shape",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Shape with the specified id",
                "type": "Shape"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 476,
            "description": "Gets an Ubuntu Button object",
            "itemtype": "method",
            "name": "button",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Button with the specified id",
                "type": "Button"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 490,
            "description": "Gets an Ubuntu Progress object",
            "itemtype": "method",
            "name": "progress",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Progress with the specified id",
                "type": "Progress"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 502,
            "description": "Gets an Ubuntu Dialog object",
            "itemtype": "method",
            "name": "dialog",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Dialog with the specified id",
                "type": "Dialog"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 516,
            "description": "Gets an Ubuntu Popover object",
            "itemtype": "method",
            "name": "popover",
            "params": [
                {
                    "name": "el",
                    "description": "- The element to which the Popover's position is relative",
                    "type": "Element"
                },
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Popover with the specified id",
                "type": "Popover"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 531,
            "description": "Gets an Ubuntu Header object",
            "itemtype": "method",
            "name": "header",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Header with the specified id",
                "type": "Header"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 545,
            "description": "Gets an Ubuntu Toolbar object",
            "itemtype": "method",
            "name": "toolbar",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                }
            ],
            "return": {
                "description": "- The Toolbar with the specified id",
                "type": "Toolbar"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 559,
            "description": "Gets an Ubuntu List",
            "itemtype": "method",
            "name": "list",
            "params": [
                {
                    "name": "selector",
                    "description": "- A selector that JavaScript querySelector method understands",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "List"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 573,
            "description": "Gets an Ubuntu Option Selector",
            "itemtype": "method",
            "name": "optionselector",
            "params": [
                {
                    "name": "id",
                    "description": "- The element's id attribute",
                    "type": "ID"
                },
                {
                    "name": "expanded",
                    "description": "- Specifies whether the list is always expanded",
                    "type": "Boolean"
                },
                {
                    "name": "multiSelection",
                    "description": "- If multiple choice selection is enabled the list is always expanded.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "OptionSelector"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 589,
            "description": "Gets the DOM element from a given selector",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "- The DOM element\nGets the HTML element associated with an Ubuntu HTML5 JavaScript object",
                "type": "Element"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 599,
            "description": "Gets this UbuntuUI's single Pagestack object",
            "itemtype": "method",
            "name": "pagestack",
            "return": {
                "description": "- The Pagestack",
                "type": "Pagestack"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "core.js",
            "line": 608,
            "description": "Gets this UbuntuUI's single Tabs object",
            "itemtype": "method",
            "name": "tabs",
            "return": {
                "description": "- The Tabs",
                "type": "Tabs"
            },
            "class": "UbuntuUI",
            "module": "UbuntuUI"
        },
        {
            "file": "dialogs.js",
            "line": 52,
            "description": "Display a dialog by adding 'active' CSS class",
            "itemtype": "method",
            "name": "show",
            "class": "UbuntuUI.Dialog",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "dialogs.js",
            "line": 59,
            "description": "Hide a dialog by removing 'active' class",
            "itemtype": "method",
            "name": "hide",
            "class": "UbuntuUI.Dialog",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "dialogs.js",
            "line": 66,
            "description": "Toggle a dialog, which means removing its 'active' class if it has one, or adding the 'active' class if it does not have one",
            "itemtype": "method",
            "name": "toggle",
            "class": "UbuntuUI.Dialog",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "dialogs.js",
            "line": 73,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "example": [
                "\n       var mydialog = UI.dialog(\"dialogid\").element();"
            ],
            "class": "UbuntuUI.Dialog",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "fast-buttons.js",
            "line": 24,
            "description": "From: http://code.this.com/mobile/articles/fast_buttons.html\nAlso see: http://stackoverflow.com/questions/6300136/trying-to-implement-googles-fast-button",
            "class": "UbuntuUI.Header",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "fast-buttons.js",
            "line": 29,
            "class": "UbuntuUI.Header",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "header.js",
            "line": 72,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "example": [
                "\n       var myheader = UI.header(\"headerid\").element();"
            ],
            "class": "UbuntuUI.Header",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 77,
            "description": "Add or Set the List Header",
            "itemtype": "method",
            "name": "setHeader",
            "params": [
                {
                    "name": "text",
                    "description": "- The header text",
                    "type": "String"
                }
            ],
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 104,
            "description": "Append an item to a list",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "text",
                    "description": "- The main text, flushed left (no markup)",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "- Additional text, flushed right (no markup)",
                    "type": "[String]"
                },
                {
                    "name": "id",
                    "description": "- An id attribute value set for the new list item (must be unique in DOM)",
                    "type": "[ID]"
                },
                {
                    "name": "onclick",
                    "description": "- The click callback function",
                    "type": "[Function]"
                },
                {
                    "name": "user_data",
                    "description": "- Additional data that is passed to the click callback",
                    "type": "[Object*]"
                }
            ],
            "return": {
                "description": "- The created list item, or null on failure ot create",
                "type": "Element"
            },
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 144,
            "description": "Gets a list item &lt;li&gt; by its index, where index counting starts from 1",
            "itemtype": "method",
            "name": "at",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The list item, or null on failure"
            },
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 155,
            "description": "Removes a list item &lt;li&gt; by its index, where index counting starts from 1",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 166,
            "description": "Removes all items from a list",
            "itemtype": "method",
            "name": "removeAllItems",
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 174,
            "description": "Iterates over all list items and runs a provided function on each",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "func",
                    "description": "- The function to run on each list item",
                    "type": "Function"
                }
            ],
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "list.js",
            "line": 187,
            "description": "Returns the DOM element associated with the selector this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "example": [
                "\n           var mylist = UI.list(\"#listid\").element();"
            ],
            "class": "UbuntuUI.List",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "option-selector.js",
            "line": 109,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.OptionSelector",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "option-selector.js",
            "line": 173,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.OptionSelector",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "option-selector.js",
            "line": 183,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.OptionSelector",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "option-selector.js",
            "line": 193,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.OptionSelector",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 67,
            "description": "Returns the DOM element associated with the selector this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "example": [
                "\n      var mypage = UI.page(\"pageid\").element();"
            ],
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 77,
            "description": "actions property.",
            "itemtype": "property",
            "name": "actions",
            "type": "List",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 89,
            "description": "title property.",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 101,
            "description": "Deactivates the current page.",
            "itemtype": "method",
            "name": "deactivate",
            "type": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 109,
            "description": "Activates the current page.",
            "itemtype": "method",
            "name": "activate",
            "type": "",
            "params": [
                {
                    "name": "properties",
                    "description": "- Data to be passed down to any activation callback listening for the page activation (see Page.onactivated)",
                    "type": "Object"
                }
            ],
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 121,
            "description": "Activates the current page.",
            "itemtype": "method",
            "name": "onactivated",
            "type": "",
            "params": [
                {
                    "name": "callback",
                    "description": "- Callback function called with activation properties (from Pagestack.push) when the page is activated",
                    "type": "Function"
                }
            ],
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 131,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 150,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 162,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 182,
            "description": "Validates that a given DOM node element is a Ubuntu UI Page.",
            "itemtype": "method",
            "name": "isPage",
            "type": "DOM Element",
            "return": {
                "description": "if the DOM element is a page",
                "type": "Boolean"
            },
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 193,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 206,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 224,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "page.js",
            "line": 231,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Page",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 96,
            "description": "Push a page to the top of this pagestack",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "id",
                    "description": "- The id attribute of the page element to be pushed",
                    "type": "String"
                },
                {
                    "name": "properties",
                    "description": "- A list of properties passed down to the page that is to be activated",
                    "type": "Object"
                }
            ],
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 112,
            "description": "Checks for zero pages in this pagestack",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "- True when this pagestack has no pages, else false",
                "type": "Boolean"
            },
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 121,
            "description": "Gets the id attribute of the page element on top of this pagestack",
            "itemtype": "method",
            "name": "currentPage",
            "return": {
                "description": "- The topmost page's id attribute, else null when there are no pages on this pagestack",
                "type": "PageID|Null"
            },
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 130,
            "description": "Gets the number of pages in this pagestack",
            "itemtype": "method",
            "name": "depth",
            "return": {
                "description": "- The number of pages in this pagestack",
                "type": "Number"
            },
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 139,
            "description": "Clears the whole page stack",
            "itemtype": "method",
            "name": "clear",
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 150,
            "description": "Pops the current page off this pagestack, which causes the next page to become the top page and to display",
            "itemtype": "method",
            "name": "pop",
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 168,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 183,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "pagestacks.js",
            "line": 190,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Pagestack",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "popovers.js",
            "line": 66,
            "description": "Display a Popover",
            "itemtype": "method",
            "name": "show",
            "class": "UbuntuUI.Popover",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "popovers.js",
            "line": 143,
            "description": "Hide a Popover",
            "itemtype": "method",
            "name": "hide",
            "class": "UbuntuUI.Popover",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "popovers.js",
            "line": 153,
            "description": "Toggle show/hide status of a Popover",
            "itemtype": "method",
            "name": "toggle",
            "class": "UbuntuUI.Popover",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "popovers.js",
            "line": 230,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "example": [
                "\n       var mypopover = UI.popover(\"popoverid\").element();"
            ],
            "class": "UbuntuUI.Popover",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "progress.js",
            "line": 47,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "example": [
                "\n           var myprogress = UI.progress(\"progressid\").element();"
            ],
            "class": "UbuntuUI.Progress",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "progress.js",
            "line": 59,
            "description": "Updates the value of the progress bar",
            "itemtype": "method",
            "name": "update",
            "example": [
                "\n           myprogress.update(30);"
            ],
            "class": "UbuntuUI.Progress",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "progress.js",
            "line": 74,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Progress",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "progress.js",
            "line": 92,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Progress",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "progress.js",
            "line": 99,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Progress",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "shape.js",
            "line": 42,
            "description": "Associate a function with the Click event",
            "itemtype": "method",
            "name": "click",
            "params": [
                {
                    "name": "-",
                    "description": "The function to execute on click",
                    "type": "Function"
                }
            ],
            "example": [
                "\n       UI.shape(\"id\").click(function(){\n        console.log(\"Clicked\");\n       });"
            ],
            "class": "UbuntuUI.Shape",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "shape.js",
            "line": 59,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "example": [
                "\n       var myshape = UI.shape(\"shapeid\").element();"
            ],
            "class": "UbuntuUI.Shape",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 65,
            "description": "Returns the DOM element associated with the selector this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "return": {
                "description": "",
                "type": "DOMElement"
            },
            "example": [
                "\n      var mytab = UI.tab(\"tabid\").element();"
            ],
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 76,
            "description": "Deactivates the current tab.",
            "itemtype": "method",
            "name": "deactivate",
            "type": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 84,
            "description": "Activates the current tab.",
            "itemtype": "method",
            "name": "activate",
            "type": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 94,
            "description": "Validates that a given DOM node element is a Ubuntu UI Tab.",
            "itemtype": "method",
            "name": "isTab",
            "type": "DOM Element",
            "return": {
                "description": "if the DOM element is a tab",
                "type": "Boolean"
            },
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 105,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 128,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 146,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tab.js",
            "line": 153,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tab",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 86,
            "description": "Return the index of the selected tab",
            "itemtype": "property",
            "name": "selectedTabIndex",
            "return": {
                "description": "- The zero based index of the element in the list of tabs or -1",
                "type": "Integer"
            },
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 95,
            "description": "Sets the index of the selected tab",
            "itemtype": "property",
            "name": "selectedTabIndex",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI",
            "subprops": [
                {
                    "name": "-",
                    "description": "The zero based index of the element in the list of tabs",
                    "type": "Integer"
                }
            ]
        },
        {
            "file": "tabs.js",
            "line": 108,
            "description": "Return the page associated with the currently selected tab",
            "deprecated": true,
            "itemtype": "property",
            "name": "currentPage",
            "return": {
                "description": "- Page DOM element associated with the currently selected tab or null",
                "type": "Element"
            },
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 120,
            "description": "Return the currently selected tab element",
            "itemtype": "property",
            "name": "selectedTab",
            "return": {
                "description": "- The currently selected element or null",
                "type": "Element"
            },
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 136,
            "description": "Return the number of tab elements in the header",
            "itemtype": "property",
            "name": "count",
            "return": {
                "description": "- Number of tab elements",
                "type": "Integer"
            },
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 145,
            "description": "Return the list of DOM elements of the tab",
            "deprecated": true,
            "itemtype": "property",
            "name": "tabChildren",
            "return": {
                "description": "- List of DOM elements in the tab",
                "type": "Elements"
            },
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 157,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 223,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 233,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 244,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 257,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 287,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 305,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 312,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "tabs.js",
            "line": 322,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Tabs",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 160,
            "description": "Display a Toolbar",
            "itemtype": "method",
            "name": "show",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 168,
            "description": "Hide a Toolbar",
            "itemtype": "method",
            "name": "hide",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 176,
            "description": "Toggle show/hide status of a Toolbar",
            "itemtype": "method",
            "name": "toggle",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 184,
            "description": "Returns the DOM element associated with the id this widget is bind to.",
            "itemtype": "method",
            "name": "element",
            "example": [
                "\n           var mytoolbar = UI.toolbar(\"toolbarid\").element();"
            ],
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 194,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 213,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 255,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 263,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 271,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 280,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 299,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        },
        {
            "file": "toolbars.js",
            "line": 310,
            "access": "private",
            "tagname": "",
            "class": "UbuntuUI.Toolbar",
            "module": "UbuntuUI",
            "namespace": "UbuntuUI"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nFrom: http://code.this.com/mobile/articles/fast_buttons.html\nAlso see: http://stackoverflow.com/questions/6300136/trying-to-implement-googles-fast-button",
            "line": " fast-buttons.js:24"
        },
        {
            "message": "Missing item type",
            "line": " fast-buttons.js:29"
        },
        {
            "message": "Missing item type",
            "line": " option-selector.js:109"
        },
        {
            "message": "Missing item type",
            "line": " option-selector.js:173"
        },
        {
            "message": "Missing item type",
            "line": " option-selector.js:183"
        },
        {
            "message": "Missing item type",
            "line": " option-selector.js:193"
        },
        {
            "message": "Missing item type",
            "line": " page.js:131"
        },
        {
            "message": "Missing item type",
            "line": " page.js:150"
        },
        {
            "message": "Missing item type",
            "line": " page.js:162"
        },
        {
            "message": "Missing item type",
            "line": " page.js:193"
        },
        {
            "message": "Missing item type",
            "line": " page.js:206"
        },
        {
            "message": "Missing item type",
            "line": " page.js:224"
        },
        {
            "message": "Missing item type",
            "line": " page.js:231"
        },
        {
            "message": "Missing item type",
            "line": " pagestacks.js:168"
        },
        {
            "message": "Missing item type",
            "line": " pagestacks.js:183"
        },
        {
            "message": "Missing item type",
            "line": " pagestacks.js:190"
        },
        {
            "message": "Missing item type",
            "line": " progress.js:74"
        },
        {
            "message": "Missing item type",
            "line": " progress.js:92"
        },
        {
            "message": "Missing item type",
            "line": " progress.js:99"
        },
        {
            "message": "Missing item type",
            "line": " tab.js:105"
        },
        {
            "message": "Missing item type",
            "line": " tab.js:128"
        },
        {
            "message": "Missing item type",
            "line": " tab.js:146"
        },
        {
            "message": "Missing item type",
            "line": " tab.js:153"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:157"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:223"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:233"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:244"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:257"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:287"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:305"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:312"
        },
        {
            "message": "Missing item type",
            "line": " tabs.js:322"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:194"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:213"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:255"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:263"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:271"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:280"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:299"
        },
        {
            "message": "Missing item type",
            "line": " toolbars.js:310"
        }
    ]
}